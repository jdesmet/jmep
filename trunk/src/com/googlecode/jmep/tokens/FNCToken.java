/* * JMEP - Java Mathematical Expression Parser. * Copyright (C) 1999  Jo Desmet *  * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or any later version. *  * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU * Lesser General Public License for more details. *  * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA *  * You can contact the Original submitter of this library by * email at: Jo_Desmet@yahoo.com. *  */package com.googlecode.jmep.tokens;import com.googlecode.jmep.hooks.Function;import com.googlecode.jmep.XUndefinedFunction;public class FNCToken extends Token {  final private Function callback;  final private String name;  private int arity; // Number of Parameters  public FNCToken(String name,Function callback,int position) {    super(Token.Type.FNC,position);    this.callback = callback;    this.name = name;    this.arity = 0;  }  public FNCToken(String name,int position) {    this(name,null,position);  }  public void setArity(int arity) {    this.arity = arity;  }  public int getArity() {    return arity;  }  public Object evaluate(Object [] params) throws XUndefinedFunction{    if (callback != null) return callback.call(params);    throw new XUndefinedFunction(getPosition(),name);  }}